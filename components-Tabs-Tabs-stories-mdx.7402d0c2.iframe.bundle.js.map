{"version":3,"file":"components-Tabs-Tabs-stories-mdx.7402d0c2.iframe.bundle.js","mappings":";;;AASA;;AAIA;;AAEA;AACA;;;;AAIA;AACA;AACA;;;AAGA;;;;;AAKA;;;;AAIA;AACA;AACA;;;;;;AAQA;AACA;ACjCA","sources":["webpack://@lokalise/louis/./src/components/Tabs/styles.ts","webpack://@lokalise/louis/./src/components/Tabs/TabList.tsx"],"sourcesContent":["import '@reach/tabs/styles.css';\nimport { Tab, TabList, TabPanel } from '@reach/tabs';\n\nimport { styled } from '../../utils/styled';\nimport { color, fontFamily, spacing, transitionTime, typography } from '../../utils/theme';\n\nexport const StyledTabList = styled(TabList)`\n    &[data-reach-tab-list] {\n        background: none;\n        border-bottom: 1px solid ${color('border.primary')};\n    }\n`;\n\nexport const StyledTab = styled(Tab)`\n    &[data-reach-tab] {\n        font-family: ${fontFamily('default')};\n        ${typography('description')}\n        // compensate for border so it overflows tablist border\n        margin-bottom: -1px;\n        border-bottom-width: 2px;\n        padding: ${spacing(2, 0)};\n        color: ${color('content.primary')};\n        transition: color ${transitionTime()};\n\n        &:hover {\n            color: ${color('primary.500')};\n        }\n    }\n\n    & + & {\n        margin-left: ${spacing(6)};\n    }\n\n    &[data-reach-tab][data-selected] {\n        ${typography('descriptionMedium')}\n        border-bottom-color: ${color('primary.500')};\n        color: ${color('primary.500')};\n    }\n\n    &[data-reach-tab]:active {\n        background: none;\n    }\n`;\n\nexport const StyledTabPanel = styled(TabPanel)`\n    font-family: ${fontFamily('default')};\n`;\n","import React from 'react';\nimport type { HTMLAttributes } from 'react';\n\nimport { StyledTabList } from './styles';\n\nexport type TabListProps = HTMLAttributes<HTMLDivElement> & {\n    /**\n     * Renders text content and / or any HTML node inside. Expects multiple `Tab` components as children.\n     * */\n    children?: React.ReactNode;\n};\n\nexport const TabList = (props: TabListProps) => <StyledTabList {...props} />;\n"],"names":[],"sourceRoot":""}